# cloudbuild.yaml (Final Version - Includes Build Args Fix)

steps:
  # Step 0: Create secret files for Firebase config
  - name: 'ubuntu'
    id: 'Create Secret Files'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Creating secret files in /workspace..."
        echo "$$FIREBASE_API_KEY" > /workspace/FIREBASE_API_KEY_FILE
        echo "$$FIREBASE_AUTH_DOMAIN" > /workspace/FIREBASE_AUTH_DOMAIN_FILE
        echo "$$FIREBASE_PROJECT_ID" > /workspace/FIREBASE_PROJECT_ID_FILE
        echo "$$FIREBASE_STORAGE_BUCKET" > /workspace/FIREBASE_STORAGE_BUCKET_FILE
        echo "$$FIREBASE_MESSAGING_SENDER_ID" > /workspace/FIREBASE_MESSAGING_SENDER_ID_FILE
        echo "$$FIREBASE_APP_ID" > /workspace/FIREBASE_APP_ID_FILE
        echo "$$FIREBASE_CLIENT_EMAIL" > /workspace/FIREBASE_CLIENT_EMAIL_FILE
        echo "$$FIREBASE_PRIVATE_KEY" > /workspace/FIREBASE_PRIVATE_KEY_FILE
        echo "$$LINKEDIN_CLIENT_ID" > /workspace/LINKEDIN_CLIENT_ID_FILE
        echo "$$LINKEDIN_REDIRECT_URI" > /workspace/LINKEDIN_REDIRECT_URI_FILE
        echo "Done creating secret files."
    secretEnv:
      - 'FIREBASE_API_KEY'
      - 'FIREBASE_AUTH_DOMAIN'
      - 'FIREBASE_PROJECT_ID'
      - 'FIREBASE_STORAGE_BUCKET'
      - 'FIREBASE_MESSAGING_SENDER_ID'
      - 'FIREBASE_APP_ID'
      - 'FIREBASE_CLIENT_EMAIL'
      - 'FIREBASE_PRIVATE_KEY'
      - 'LINKEDIN_CLIENT_ID'
      - 'LINKEDIN_REDIRECT_URI'

  # Step 1: Build the Frontend Docker image (Pass URLs as Build Args)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend Image'
    waitFor: ['Create Secret Files']
    args:
      - 'build'
      # --- Pass URLs as Build Args ---
      - '--build-arg'
      - 'NEXT_PUBLIC_ENHANCE_FUNCTION_URL=https://enhance-resume-text-sirxstvtva-uc.a.run.app'
      - '--build-arg'
      - 'NEXT_PUBLIC_SUGGEST_SKILLS_FUNCTION_URL=https://suggest-resume-skills-sirxstvtva-uc.a.run.app'
      - '--build-arg'
      - 'GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID'
      - '--build-arg'
      - 'NEXT_PUBLIC_LINKEDIN_CLIENT_ID=$LINKEDIN_CLIENT_ID'
      - '--build-arg'
      - 'NEXT_PUBLIC_LINKEDIN_REDIRECT_URI=$LINKEDIN_REDIRECT_URI'
      # --- End Build Args ---
      - '--tag'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--tag'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:latest'
      - '--platform'
      - 'linux/amd64'
      - '.'

  # Step 2: Push the Frontend Docker image (Attempts both tags)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend Image'
    waitFor: ['Build Frontend Image']
    args:
      - 'push'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}'

  # Step 2b: Explicitly Push Commit SHA Tag (Robustness Step)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Explicit Push SHA Tag'
    waitFor: ['Push Frontend Image']
    args:
      - 'push'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'

  # Step 3: Deploy the enhance-resume-text Cloud Function to us-central1
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Enhance Function'
    args:
      - 'functions'
      - 'deploy'
      - 'enhance-resume-text'
      - '--gen2'
      - '--runtime=nodejs20'
      - '--region=us-central1'
      - '--source=./enhance-resume-text'
      - '--entry-point=enhanceResumeText'
      - '--trigger-http'
      - '--allow-unauthenticated'
      - '--service-account=62486276154-compute@developer.gserviceaccount.com'
      - '--project=$PROJECT_ID'

  # Step 4: Deploy the suggest-resume-skills Cloud Function to us-central1
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Suggest Function'
    args:
      - 'functions'
      - 'deploy'
      - 'suggest-resume-skills'
      - '--gen2'
      - '--runtime=nodejs20'
      - '--region=us-central1'
      - '--source=./suggest-resume-skills'
      - '--entry-point=suggestResumeSkills'
      - '--trigger-http'
      - '--allow-unauthenticated'
      - '--service-account=62486276154-compute@developer.gserviceaccount.com'
      - '--project=$PROJECT_ID'

  # Step 5: Deploy the Frontend image to Cloud Run (Step index becomes 6 in UI)
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Frontend Service'
    waitFor: ['Explicit Push SHA Tag', 'Deploy Enhance Function', 'Deploy Suggest Function']
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_CLOUD_RUN_REGION}'
      - '--platform'
      - 'managed'
      - '--project=$PROJECT_ID'
      # '--set-env-vars' # Optional now, URLs are baked into frontend build
      # '- '^#^NEXT_PUBLIC_ENHANCE_FUNCTION_URL=https://enhance-resume-text-sirxstvtva-uc.a.run.app#NEXT_PUBLIC_SUGGEST_SKILLS_FUNCTION_URL=https://suggest-resume-skills-sirxstvtva-uc.a.run.app'

# images section
images:
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:latest'

# availableSecrets section
availableSecrets:
  secretManager:
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_API_KEY/versions/latest
      env: 'FIREBASE_API_KEY'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN/versions/latest
      env: 'FIREBASE_AUTH_DOMAIN'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_PROJECT_ID/versions/latest
      env: 'FIREBASE_PROJECT_ID'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET/versions/latest
      env: 'FIREBASE_STORAGE_BUCKET'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID/versions/latest
      env: 'FIREBASE_MESSAGING_SENDER_ID'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_APP_ID/versions/latest
      env: 'FIREBASE_APP_ID'
    - versionName: projects/car-magic-454906/secrets/FIREBASE_CLIENT_EMAIL/versions/latest
      env: 'FIREBASE_CLIENT_EMAIL'
    - versionName: projects/car-magic-454906/secrets/FIREBASE_PRIVATE_KEY/versions/latest
      env: 'FIREBASE_PRIVATE_KEY'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_LINKEDIN_CLIENT_ID/versions/latest
      env: 'LINKEDIN_CLIENT_ID'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_LINKEDIN_REDIRECT_URI/versions/latest
      env: 'LINKEDIN_REDIRECT_URI'

# substitutions section
substitutions:
  _SERVICE_NAME: skillsculpt-app
  _CLOUD_RUN_REGION: us-west2
  _ARTIFACT_REGISTRY_REGION: us-west2
  _ARTIFACT_REPO_NAME: skillsculpt-repo

# timeout section
timeout: '1200s' # 20 minutes

# options section
options:
  logging: CLOUD_LOGGING_ONLY