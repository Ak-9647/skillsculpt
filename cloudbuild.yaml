steps:
  # Step 0: Create secret files for Firebase config (No change)
  - name: 'ubuntu'
    id: 'Create Secret Files'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Creating secret files in /workspace..."
        echo "$$FIREBASE_API_KEY" > /workspace/FIREBASE_API_KEY_FILE
        echo "$$FIREBASE_AUTH_DOMAIN" > /workspace/FIREBASE_AUTH_DOMAIN_FILE
        echo "$$FIREBASE_PROJECT_ID" > /workspace/FIREBASE_PROJECT_ID_FILE
        echo "$$FIREBASE_STORAGE_BUCKET" > /workspace/FIREBASE_STORAGE_BUCKET_FILE
        echo "$$FIREBASE_MESSAGING_SENDER_ID" > /workspace/FIREBASE_MESSAGING_SENDER_ID_FILE
        echo "$$FIREBASE_APP_ID" > /workspace/FIREBASE_APP_ID_FILE
        echo "Done creating secret files."
    secretEnv:
      - 'FIREBASE_API_KEY'
      - 'FIREBASE_AUTH_DOMAIN'
      - 'FIREBASE_PROJECT_ID'
      - 'FIREBASE_STORAGE_BUCKET'
      - 'FIREBASE_MESSAGING_SENDER_ID'
      - 'FIREBASE_APP_ID'

  # Step 1: Build the Frontend Docker image (No change)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Frontend Image'
    waitFor: ['Create Secret Files']
    args:
      - 'build'
      - '--tag'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--tag'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:latest'
      - '--platform'
      - 'linux/amd64'
      - '.' # Assumes Dockerfile is in the current directory (skillsculpt-app)

  # Step 2: Push the Frontend Docker image (No change)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Frontend Image'
    waitFor: ['Build Frontend Image']
    args:
      - 'push'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}'

# --- FUNCTION DEPLOYMENT STEPS COMMENTED OUT FOR DIAGNOSTICS ---
#
#  # Step 3: Deploy the enhance-resume-text Cloud Function (COMMENTED OUT)
#  - name: 'gcr.io/cloud-builders/gcloud'
#    id: 'Deploy Enhance Function'
#    args:
#      - 'functions'
#      - 'deploy'
#      - 'enhance-resume-text'
#      - '--gen2'
#      - '--runtime=nodejs20' 
#      - '--region=us-central1'
#      - '--source=./enhance-resume-text' 
#      - '--entry-point=enhanceResumeText'
#      - '--trigger-http'
#      - '--allow-unauthenticated'
#      - '--service-account=62486276154-compute@developer.gserviceaccount.com'
#      - '--project=$PROJECT_ID'
#
#  # Step 4: Deploy the suggest-resume-skills Cloud Function (COMMENTED OUT)
#  - name: 'gcr.io/cloud-builders/gcloud'
#    id: 'Deploy Suggest Function'
#    args:
#      - 'functions'
#      - 'deploy'
#      - 'suggest-resume-skills'
#      - '--gen2'
#      - '--runtime=nodejs20' 
#      - '--region=us-central1'
#      - '--source=./suggest-resume-skills' 
#      - '--entry-point=suggestResumeSkills'
#      - '--trigger-http'
#      - '--allow-unauthenticated'
#      - '--service-account=62486276154-compute@developer.gserviceaccount.com'
#      - '--project=$PROJECT_ID'
#
# --- END OF COMMENTED OUT FUNCTION STEPS ---

  # Step 3 (Original Step 5): Deploy the Frontend image to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Deploy Frontend Service'
    # *** UPDATED waitFor: Only wait for push now ***
    waitFor: ['Push Frontend Image']
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}' # Uses substitution 'skillsculpt-app'
      - '--image'
      - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
      - '--region'
      - '${_CLOUD_RUN_REGION}' # Uses substitution 'us-west2'
      - '--platform'
      - 'managed'
      - '--project=$PROJECT_ID'
      # '--allow-unauthenticated' # Keep commented if default auth is desired
      # *** REMOVED --set-env-vars for this test ***

# images section (No change needed)
images:
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:$COMMIT_SHA'
  - '${_ARTIFACT_REGISTRY_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO_NAME}/${_SERVICE_NAME}:latest'

# availableSecrets section (No change needed)
availableSecrets:
  secretManager:
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_API_KEY/versions/latest
      env: 'FIREBASE_API_KEY'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN/versions/latest
      env: 'FIREBASE_AUTH_DOMAIN'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_PROJECT_ID/versions/latest
      env: 'FIREBASE_PROJECT_ID'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET/versions/latest
      env: 'FIREBASE_STORAGE_BUCKET'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID/versions/latest
      env: 'FIREBASE_MESSAGING_SENDER_ID'
    - versionName: projects/car-magic-454906/secrets/NEXT_PUBLIC_FIREBASE_APP_ID/versions/latest
      env: 'FIREBASE_APP_ID'

# substitutions section (No change needed)
substitutions:
  _SERVICE_NAME: skillsculpt-app
  _CLOUD_RUN_REGION: us-west2
  _ARTIFACT_REGISTRY_REGION: us-west2
  _ARTIFACT_REPO_NAME: skillsculpt-repo

# timeout section (No change needed)
timeout: '1200s' # 20 minutes

# options section (No change needed)
options:
  logging: CLOUD_LOGGING_ONLY